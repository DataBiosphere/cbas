openapi: 3.0.3
info:
  title: Terra Batch Analysis
  description: Manage batch analyses, workflows, and submissions in userspace
  version: 0.0.1
paths:
  /status:
    get:
      summary: Check status of the service
      tags: [ public ]
      operationId: getStatus
      security: [ ]
      responses:
        '200':
          $ref: '#/components/responses/SystemStatusResponse'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/SystemStatusResponse'
  "/api/batch/v1/runs":
    get:
      tags: [ runs ]
      summary: Get a log of a workflow.
      operationId: getRun
      responses:
        '200':
          $ref: '#/components/responses/GetRunResponse'
        '400':
          $ref: '#/components/responses/UserError'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags: [ runs ]
      summary: Run a single instance of a workflow with static inputs.
      operationId: postRun
      requestBody:
        $ref: '#/components/requestBodies/PostRunRequest'
#        description: Request body to run a single instance of a workflow (by URL) with static inputs.
#        content:
#          multipart/form-data:
#            schema:
#              $ref: '#/components/schemas/RunRequest'
      responses:
        '200':
          $ref: '#/components/responses/PostRunResponse'
        '201':
          $ref: '#/components/responses/PostRunResponse'
        '400':
          $ref: '#/components/responses/UserError'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/batch/v1/methods:
    get:
      summary: Lists known methods
      tags: [ batch ]
      operationId: listMethods
      responses:
        '200':
          description: A JSON array of methods
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          $ref: '#/components/responses/ServerError'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  requestBodies:
    PostRunRequest:
      description: Request body to run a single instance of a workflow (by URL) with static inputs.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/RunRequest'

  responses:
    PostRunResponse:
      description: Response from creating a new run
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RunStateResponse'
    GetRunResponse:
      description: Details about runs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RunLogResponse'
    SystemStatusResponse:
      description: A JSON description of the subsystems and their statuses.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'
    UserError:
      description: User error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

  schemas:
    RunRequest:
      type: object
      properties:
        workflow_url:
          type: string
          description: URL to the workflow script to run
        workflow_params:
          type: object
          description: Input set
    LogRunRequest:
      type: object
      properties:
        run_id:
          type: string
        workflow_url:
          type: string
          description: URL to the workflow script to run
        name:
          type: string
        state:
          $ref: '#/components/schemas/RunState'
        workflow_params:
          type: object
        submission_date:
          type: string
          format: date-time
    RunLogResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: '#/components/schemas/LogRunRequest'
    RunStateResponse:
      type: object
      required: [run_id]
      properties:
        run_id:
          type:
            string
          example: 00000000-0000-0000-0000-000000000000
        state:
          $ref: '#/components/schemas/RunState'
    ErrorReport:
      type: object
      required: [ message, status_code, causes]
      properties:
        message:
          type: string
        status_code:
          type: integer
        causes:
          type: array
          items:
            type: string
    SystemStatus:
      required: [ ok, systems ]
      type: object
      properties:
        ok:
          type: boolean
          description: whether any system(s) need attention
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string
    RunState:
      title: RunState
      example: QUEUED
      enum:
        - UNKNOWN
        - QUEUED
        - INITIALIZING
        - RUNNING
        - PAUSED
        - COMPLETE
        - EXECUTOR_ERROR
        - SYSTEM_ERROR
        - CANCELED
        - CANCELING
      type: string
