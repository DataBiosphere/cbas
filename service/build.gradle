plugins {
    id 'java-spring-conventions'
    id 'de.undercouch.download'
    id 'com.google.cloud.tools.jib'
    id 'com.srcclr.gradle'
    id 'org.sonarqube'

    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
    id 'org.liquibase.gradle' version '2.1.0'
}

apply from: 'generators.gradle'
apply from: 'publishing.gradle'

dependencies {
    implementation "com.google.guava:guava:31.0.1-jre"
    implementation "io.prometheus:simpleclient_httpserver:0.12.0"
    implementation "io.opencensus:opencensus-exporter-stats-prometheus:0.28.3"
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation "org.broadinstitute.cromwell:cromwell-client_2.13:0.1-9a63f9364-SNAP"
    implementation "org.broadinstitute.dsde.workbench:leonardo-client_2.13:1.3.6-66d9fcf"
    implementation 'bio.terra:terra-common-lib'
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.databiosphere:workspacedataservice-client-okhttp-javax:0.2.98-SNAPSHOT'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.broadinstitute.dsde.workbench:sam-client_2.13:0.1-fd8ee25'
    implementation 'bio.terra:datarepo-client:1.313.0-SNAPSHOT'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'bio.terra:externalcreds-client-resttemplate:1.12.0-20240229.204210-1'

    // azure dependencies
    implementation 'com.azure:azure-core-management:1.10.2'
    implementation 'com.azure:azure-identity:1.9.1'
    implementation 'com.azure:azure-identity-extensions:1.1.4'
    implementation 'com.microsoft.azure:applicationinsights-runtime-attach:3.4.17'

    implementation project(':dockstore-client')

    liquibaseRuntime 'org.liquibase:liquibase-core:3.10.0'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql:42.3.3'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.2.3'
    liquibaseRuntime 'org.yaml:snakeyaml:1.8'

    implementation("com.squareup.okhttp3:okhttp") {
        version {
            strictly '4.10.0'
        }
    }

    implementation("com.squareup.okhttp3:logging-interceptor") {
        version {
            strictly '4.10.0'
        }
    }

    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        // Fixes warning about multiple occurrences of JSONObject on the classpath
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    testImplementation("au.com.dius.pact.provider:junit5:4.3.19")
    testImplementation('au.com.dius.pact.provider:junit5spring:4.3.19')
    testImplementation('au.com.dius.pact.consumer:junit5:4.3.19')
    testImplementation("au.com.dius.pact.consumer:junit:4.3.19")
}

test {
    useJUnitPlatform()
    filter {
        excludeTestsMatching "*VerifyPacts*"
    }
}

task verifyPacts( type: Test ) {
    useJUnitPlatform()
    systemProperty 'pact.provider.version', System.getenv('PACT_PROVIDER_VERSION')
    systemProperty 'pact.provider.branch',  System.getenv('PACT_PROVIDER_BRANCH')
    systemProperty 'pact.verifier.publishResults', System.getenv('PACT_PUBLISH_RESULTS')
    systemProperty 'pactbroker.host', System.getenv('PACT_BROKER_URL')
    systemProperty 'pactbroker.auth.username', System.getenv('PACT_BROKER_USERNAME')
    systemProperty 'pactbroker.auth.password', System.getenv('PACT_BROKER_PASSWORD')
    systemProperty 'pactbroker.scheme', 'https'
    filter {
        includeTestsMatching "*VerifyPacts*"
    }
 }

task pactTests(type: Test) {
    useJUnitPlatform {
        includeTags "pact-test"
    }
    environment.put('pact.rootDir', "$buildDir/pacts")
    environment.put('pact.provider.version', "$project.version")
}

sonarqube {
    properties {
        property 'sonar.projectName', 'composite-batch-analysis-service'
        property 'sonar.projectKey', 'DataBiosphere_terra-batch-analysis'
        property 'sonar.organization', 'broad-databiosphere'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

liquibase {
    activities {
        cbas {
            changeLogFile 'src/main/resources/changelog/changelog.yaml'
            url 'jdbc:postgresql://localhost:5432/cbas_db'
            username 'cbas_user'
            password 'cbas_password'
            logLevel 'info'
        }
    }
}
