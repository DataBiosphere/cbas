name: 'Azure E2E test'
'on':
  schedule:
    # run twice a day at 10:00 and 22:00 UTC every day of the week
    - cron: "0 10/12 * * 1-5"
  workflow_dispatch:

env:
  BEE_NAME: '${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt}}-dev'
  BROADBOT_TOKEN: '${{ secrets.BROADBOT_TOKEN }}' # GitHub token for access to kick off a job in the private repo
  RUN_NAME_SUFFIX: '${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt }}'

jobs:
  # This job provisions useful parameters for e2e tests, including access tokens.
  # Please note: access tokens are for use in the same workflow, they cannot be dispatched to remote workflows.
  params-gen:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      project-name: ${{ steps.gen.outputs.project_name }}
    steps:
      - name: Generate a random billing project name
        id: 'gen'
        run: |
          project_name=$(echo "tmp-billing-project-$(uuidgen)" | cut -c -30)
          echo "project_name=${project_name}" >> $GITHUB_OUTPUT

  create-bee-workflow:
    runs-on: ubuntu-latest
    needs: params-gen
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Dispatch to terra-github-workflows
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: bee-create
          repo: broadinstitute/terra-github-workflows
          ref: refs/heads/main
          token: ${{ env.BROADBOT_TOKEN }}
          inputs: >-
            {
              "bee-name": "${{ env.BEE_NAME }}",
              "bee-template-name": "rawls-e2e-azure-tests",
              "version-template": "dev"
            }

  create-and-attach-billing-project-to-landing-zone-workflow:
    runs-on: ubuntu-latest
    needs: [ create-bee-workflow, params-gen ]
    steps:
      - name: dispatch to terra-github-workflows
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: attach-billing-project-to-landing-zone.yaml
          repo: broadinstitute/terra-github-workflows
          ref: refs/heads/main
          token: ${{ env.BROADBOT_TOKEN }}
          inputs: >-
            {
              "bee-name": "${{ env.BEE_NAME }}",
              "billing-project": "${{ needs.params-gen.outputs.project-name }}",
              "service-account": "firecloud-qa@broad-dsde-qa.iam.gserviceaccount.com"
            }

  run-cbas-azure-e2e-test:
    needs: [ params-gen, create-and-attach-billing-project-to-landing-zone-workflow ]
    steps:
      - name: Run CBAS E2E tests on Azure
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: run_cbas_azure_e2e_tests.yaml
          repo: broadinstitute/dsp-reusable-workflows
          ref: refs/heads/sps_cbas_e2e_test #TODO: switch to main
          token: ${{ env.BROADBOT_TOKEN }}
          inputs: >-
            {
              "bee-name": "${{ env.BEE_NAME }}",
              "billing-project-name": "${{ needs.params-gen.outputs.project-name }}"
            }

  destroy-bee-workflow:
    runs-on: ubuntu-latest
    needs: [create-bee-workflow, run-workflows-azure-e2e-test]
    if: always()
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: dispatch to terra-github-workflows
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: bee-destroy
          repo: broadinstitute/terra-github-workflows
          ref: refs/heads/main
          wait-for-completion: false
          token: '${{ env.BROADBOT_TOKEN }}'
          inputs: '{ "bee-name": "${{ env.BEE_NAME }}" }'

#  report-workflow:
#    uses: broadinstitute/sherlock/.github/workflows/client-report-workflow.yaml@main
#    with:
#      notify-slack-channels-upon-workflow-failure: "#cromwell_jenkins_ci_errors"
#    permissions:
#      id-token: write
