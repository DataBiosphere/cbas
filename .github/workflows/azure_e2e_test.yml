name: 'Azure E2E test'
on:
  workflow_dispatch:
    inputs:
      target-branch:
        description: 'Branch of CBAS to run tests on'
        required: true
        default: 'develop'
        type: string
      # Replace user data with seeded data provided by devOps (once available)
      owner-subject:
        description: 'Owner of billing project'
        required: true
        default: 'hermione.owner@quality.firecloud.org'
        type: string
      service-account:
        description: 'Email address or unique identifier of the Google Cloud service account for which to generate credentials'
        required: true
        default: 'firecloud-qa@broad-dsde-qa.iam.gserviceaccount.com'
        type: string

env:
  BEE_NAME: '${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt}}-dev'
  BROADBOT_TOKEN: '${{ secrets.BROADBOT_TOKEN }}' # github token for access to kick off a job in the private repo
  RUN_NAME_SUFFIX: '${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt }}'

jobs:
  init-github-context:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract-inputs.outputs.branch }}
    steps:
      - name: Get inputs or use defaults
        id: extract-inputs
        run: |
          echo "branch=${{ inputs.target-branch || 'develop' }}" >> "$GITHUB_OUTPUT"

  # This job provisions useful parameters for e2e tests, including access tokens.
  # Please note: access tokens are for use in the same workflow, they cannot be dispatched to remote workflows.
  params-gen:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      project-name: ${{ steps.gen.outputs.project_name }}
    steps:
      - name: Generate a random billing project name
        id: 'gen'
        run: |
          project_name=$(echo "tmp-billing-project-$(uuidgen)" | cut -c -30)
          echo "project_name=${project_name}" >> $GITHUB_OUTPUT

  create-bee-workflow:
    runs-on: ubuntu-latest
    needs: [init-github-context, params-gen]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Dispatch to terra-github-workflows
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: bee-create
          repo: broadinstitute/terra-github-workflows
          ref: refs/heads/main
          token: ${{ env.BROADBOT_TOKEN }}
          inputs: >-
            {
              "bee-name": "${{ env.BEE_NAME }}",
              "bee-template-name": "rawls-e2e-azure-tests",
              "version-template": "dev"
            }

  create-and-attach-billing-project-to-landing-zone-workflow:
    runs-on: ubuntu-latest
    needs: [ create-bee-workflow, params-gen ]
    steps:
      - name: dispatch to terra-github-workflows
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: attach-billing-project-to-landing-zone.yaml
          repo: broadinstitute/terra-github-workflows
          ref: refs/heads/main
          token: ${{ env.BROADBOT_TOKEN }}
          inputs: >-
            {
              "run-name": "attach-billing-project-to-landing-zone-${{ env.RUN_NAME_SUFFIX }}",
              "bee-name": "${{ env.BEE_NAME }}",
              "billing-project": "${{ needs.params-gen.outputs.project-name }}",
              "billing-project-creator": "${{ inputs.owner-subject }}",
              "service-account": "${{inputs.service-account}}"
            }

  run-workflows-azure-e2e-test:
    runs-on: ubuntu-latest
    needs: [ params-gen, create-and-attach-billing-project-to-landing-zone-workflow ]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: 'actions/checkout@v3'
      - name: Generate OAuth2 2.0 access token for owner
        id: 'owner_auth'
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider'
          service_account: ${{ inputs.service-account }}
          access_token_scopes: 'profile, email, openid'
          access_token_subject: ${{ inputs.owner-subject }}
          export_environment_variables: false
          create_credentials_file: false
      - name: "Checkout dsp-reusable-workflows"
        uses: actions/checkout@v3
        with:
          ref: sps_cbas_e2e_test #TODO: switch to main
          repository: broadinstitute/dsp-reusable-workflows
          path: dsp-reusable-workflows/
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          cd dsp-reusable-workflows/e2e-test/resources/cbas/
          pip install -r requirements.txt
      - name: Run e2e test
        env:
          BEE_NAME: ${{env.BEE_NAME}}
          BILLING_PROJECT_NAME: ${{needs.params-gen.outputs.project-name}}
          BEARER_TOKEN: ${{ steps.owner_auth.outputs.access_token }}
        run: |
          cd dsp-reusable-workflows/e2e-test/
          python cbas_azure_e2e_test.py
