name: Tag and publish

# Note: Adapted from terra-data-catalog.
# For future functionality like 'publish to Artifactory', 'push to GCR', ..., see the data catalog version of this file.

on:
  workflow_call:
    secrets:
      BROADBOT_TOKEN:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_PASSWORD:
        required: true
      DSDEJENKINS_DOCKERHUB_PASSWORD:
        required: true

env:
  SERVICE_NAME: cbas
  DOCKERHUB_ORG: broadinstitute
  GOOGLE_PROJECT: broad-dsp-gcr-public

jobs:
  ctx-job:
    runs-on: ubuntu-latest

    steps:
      - name:
        run:
          echo "github.head_ref"
          echo ${{ github.head_ref }}
          echo "github.ref"
          echo ${{ github.ref }}
          echo ${{ github.event }}

  tag-job:
    uses: ./.github/workflows/tag.yml
    with:
      # The 'ref' parameter ensures that the provider version is postfixed with the HEAD commit of the PR branch,
      # facilitating cross-referencing of a pact between Pact Broker and GitHub.
      ref: ${{ github.head_ref || '' }}
      dry-run: true
      release-branches: main
    secrets: inherit

  publish-job:
    needs: [ tag-job ]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Fetch Jira ID from commit message
        env:
          COMMIT_MESSAGE: ${{ toJson(github.event.head_commit.message) }}
        id: ensure-jira-id
        run: |
          echo "env.COMMIT_MESSAGE"
          echo ${{ env.COMMIT_MESSAGE }}
          JIRA_ID=$(echo "$COMMIT_MESSAGE" | grep -Eo '[A-Z][A-Z]+-[0-9]+' | xargs echo -n | tr '[:space:]' ',')
          [[ -z "$JIRA_ID" ]] && { echo "No Jira ID found in $1" ; exit 1; }
          echo ::set-output name=JIRA_ID::${JIRA_ID}
      - name: Checkout current code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BROADBOT_TOKEN }} # this allows the push to succeed later
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Publish to Artifactory
        run: ./gradlew --build-cache :client:artifactoryPublish
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_REPO_KEY: "libs-release-local"

      - name: Construct dockerhub and GCR image names
        id: image-name
        run: |
          echo ::set-output name=DOCKERHUB_NAME::${DOCKERHUB_ORG}/${SERVICE_NAME}:${{ needs.tag-job.outputs.tag }}
          echo ::set-output name=GCR_NAME::us.gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ needs.tag-job.outputs.tag }}

