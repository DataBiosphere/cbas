name: Tag and publish

# Note: Adapted from terra-data-catalog.
# For future functionality like 'publish to Artifactory', 'push to GCR', ..., see the data catalog version of this file.

on:
  workflow_call:
    secrets:
      BROADBOT_TOKEN:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_PASSWORD:
        required: true
      DSDEJENKINS_DOCKERHUB_PASSWORD:
        required: true
      ACR_SP_PASSWORD:
        required: true
      ACR_SP_USER:
        required: true

env:
  SERVICE_NAME: cbas
  DOCKERHUB_ORG: broadinstitute
  GOOGLE_PROJECT: broad-dsp-gcr-public
  ACR_REGISTRY: terradevacrpublic.azurecr.io

jobs:
  tag-and-publish-job:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Fetch Jira ID from commit message
        env:
          COMMIT_MESSAGE: ${{ toJson(github.event.head_commit.message) }}
        id: ensure-jira-id
        run: |
          JIRA_ID=$(echo "$COMMIT_MESSAGE" | grep -Eo '[A-Z][A-Z]+-[0-9]+' | xargs echo -n | tr '[:space:]' ',')
          [[ -z "$JIRA_ID" ]] && { echo "No Jira ID found in $1" ; exit 1; }
          echo ::set-output name=JIRA_ID::${JIRA_ID}
      - name: Checkout current code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BROADBOT_TOKEN }} # this allows the push to succeed later
      - id: tag
        name: Dispatch tag
        uses: databiosphere/github-actions/actions/bumper@bumper-0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          VERSION_FILE_PATH: settings.gradle
          VERSION_LINE_MATCH: "^\\s*gradle.ext.releaseVersion\\s*=\\s*'.*'"
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Publish to Artifactory
        run: ./gradlew --build-cache :client:artifactoryPublish
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_REPO_KEY: "libs-release-local"

      - name: Construct dockerhub, GCR, and ACR image names
        id: image-name
        run: |
          echo ::set-output name=DOCKERHUB_NAME::${DOCKERHUB_ORG}/${SERVICE_NAME}:${{ steps.tag.outputs.new_tag }}
          echo ::set-output name=GCR_NAME::us.gcr.io/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ steps.tag.outputs.new_tag }}
          echo ::set-output name=ACR_NAME::${ACR_REGISTRY}/${SERVICE_NAME}:${{ steps.tag.outputs.new_tag }}

      - name: Build image locally with jib
        run: |
          ./gradlew --build-cache :service:jibDockerBuild \
          --image=${{ steps.image-name.outputs.DOCKERHUB_NAME }} \
          -Djib.console=plain

      - name: Run Trivy vulnerability scanner
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.DOCKERHUB_NAME }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: dsdejenkins
          password: ${{ secrets.DSDEJENKINS_DOCKERHUB_PASSWORD }}

      - name: Push dockerhub image
        run: docker push ${{ steps.image-name.outputs.DOCKERHUB_NAME }}

      - name: Re-tag image for GCR
        run: docker tag ${{ steps.image-name.outputs.DOCKERHUB_NAME }} ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v0'
        with:
          # Centralized in dsp-tools-k8s; ask in #dsp-devops-champions for help troubleshooting
          workload_identity_provider: 'projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider'
          service_account: 'gcr-publish@broad-dsp-gcr-public.iam.gserviceaccount.com'

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Push GCR image
        run: docker push ${{ steps.image-name.outputs.GCR_NAME }}

      - name: Re-tag image for ACR
        run: docker tag ${{ steps.image-name.outputs.DOCKERHUB_NAME }} ${{ steps.image-name.outputs.ACR_NAME }}

      - name: Push image to ACR
        run: |
          echo ${{ secrets.ACR_SP_PASSWORD }} | docker login ${ACR_REGISTRY} \
          --username ${{ secrets.ACR_SP_USER }} \
          --password-stdin
          docker push ${{ steps.image-name.outputs.ACR_NAME }}

      - name: Clone terra-helmfile
        uses: actions/checkout@v3
        with:
          repository: broadinstitute/terra-helmfile
          token: ${{ secrets.BROADBOT_TOKEN }} # Has to be set at checkout AND later when pushing to work
          path: terra-helmfile

      - name: Update workflows-app in terra-helmfile
        run: |
          set -e
          cd terra-helmfile
          HELM_CUR_TAG=$(grep "/cbas:" charts/workflows-app/values.yaml | sed "s,.*/cbas:,,")
          HELM_NEW_TAG=${{ steps.tag.outputs.new_tag }}
          [[ -n "$HELM_CUR_TAG" && -n "$HELM_NEW_TAG" ]]
          sed -i "s/$HELM_CUR_TAG/$HELM_NEW_TAG/" charts/workflows-app/values.yaml
          cd -

      - name: Make PR in terra-helmfile
        env:
          BROADBOT_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          GH_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
        run: |
          set -e
          HELM_NEW_TAG=${{ steps.tag.outputs.new_tag }}
          JIRA_ID=${{ steps.ensure-jira-id.outputs.JIRA_ID }}
          if [[ $JIRA_ID == "missing" ]]; then
            echo "JIRA_ID missing, PR to terra-helmfile will not be created"
            exit 0;
          fi
          cd terra-helmfile
          git checkout -b ${JIRA_ID}-cbas-update-${HELM_NEW_TAG}
          git config --global user.name "broadbot"
          git config --global user.email "broadbot@broadinstitute.org"
          git commit -am "${JIRA_ID}: Auto update CBAS to $HELM_NEW_TAG in workflows-app"
          git push -u origin ${JIRA_ID}-cbas-update-${HELM_NEW_TAG}
          gh pr create --title "${JIRA_ID}: auto update CBAS version to $HELM_NEW_TAG in workflows-app" --body "${JIRA_ID} helm chart update" --label "automerge"
          cd -
